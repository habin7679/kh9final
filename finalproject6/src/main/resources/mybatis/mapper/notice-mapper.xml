<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
 <mapper namespace="notice">
 
 <select id="noticeList" resultType="NoticeDto">
 	select * from notice where pin = 1 order by notice_time asc
 </select>
 	
 	<select id="list" resultType="NoticeDto" parameterType="Map">
 		<bind name="columnExist" value="column != null and !column.equals('')"></bind>
 		<bind name="orderExist" value="order != null and !order.equals('')"></bind>
 		select * from (
 			select rownum rn, TMP.* from(
	 			select * from notice
	 			<if test="type != null and keyword != null">
	 				<![CDATA[
	 				where instr (${type},#{keyword}) > 0  
  	 				]]>  
	 			</if>
<!-- 	 			정렬 --> order by notice_no desc
	 			)
						TMP 
 			) where rn between #{begin} and #{end} 
 			<choose>
	 				<when test="columnExist and orderExist">
	 				order by ${column} ${order}
	 				</when>
	 				<otherwise>
	 					order by notice_no desc
	 				</otherwise>
	 			</choose>
 	
 	</select>

<!-- <select id="list" resultType="NoticeDto" parameterType="Map"> -->
<!--  		<bind name="columnExist" value="column != null and !column.equals('')"></bind> -->
<!--  		<bind name="orderExist" value="order != null and !order.equals('')"></bind> -->
<!--  		select * from (  -->
<!--  			select rownum rn, TMP.* from (select * from notice where pin = 1 union all -->
<!-- 	 			select * from notice -->
<!-- 	 			<if test="type != null and keyword != null"> -->
<!-- 	 				<![CDATA[ -->
<!-- 	 				where instr (${type},#{keyword}) > 0  -->
<!-- 	 				]]>  -->
<!-- 	 			</if> -->
<!-- 	 			<choose> -->
<!-- 	 				<when test="columnExist and orderExist"> -->
<!-- 	 				order by ${column} ${order} -->
<!-- 	 				</when> -->
<!-- 	 				<otherwise> -->
<!-- 	 					order by pin desc, notice_time desc -->
<!-- 	 				</otherwise> -->
<!-- 	 			</choose>) -->
<!-- 						TMP  -->
<!--  			) where rn between #{begin} and #{end}  -->
 	
<!--  	</select> -->

 	
 	<select id="count" parameterType="Map" resultType="int">
 		select count(*) from notice 
 		<if test = "type != null and keyword != null">
 			<![CDATA[
 			where instr (${type},#{keyword}) > 0
 			]]>
 		</if>
 	</select>
 	
 	<select id="one" parameterType="int" resultType="NoticeDto">
 		select * from notice
 			where notice_no = #{noticeNo}
 	</select>
 	
 	<update id="readcount" parameterType="int">
 		update notice set notice_readcount = notice_readcount + 1 where notice_no = #{noticeNo}
 	</update>
 	
 	<select id="sequence" resultType="int">
 		select notice_seq.nextval from dual
 	</select>
 	
 	<insert id="write" parameterType="NoticeDto">
 		insert into notice (
 			notice_no,member_no,notice_head,notice_title,notice_content,notice_writer,pin)
 		values (#{noticeNo},#{memberNo},#{noticeHead},#{noticeTitle},#{noticeContent},#{noticeWriter},#{pin})
 	</insert>
 	
 	<delete id="delete" parameterType="int">
 		delete notice where notice_no = #{noticeNo}
 	</delete>
 	
 	<update id="edit" parameterType="NoticeDto">
 		update notice set
 			notice_head = #{noticeHead} ,notice_title = #{noticeTitle}, 
 			notice_content = #{noticeContent}, pin = #{pin}
 		where notice_no = #{noticeNo}
 	</update>
 	
<!--  	<select id="allRead" parameterType="Map" resultType="BoardVO" > -->
<!--  		select * from ( -->
<!-- 			select rownum rn, TMP.* from( -->
<!-- 			select qna_no,member_no,qna_title, qna_content, qna_writer,qna_time from qna where member_no = ${memberNo} -->
<!-- 			union all -->
<!-- 			select together_no,member_no,together_title,together_content,together_writer,together_time from  -->
<!-- 			together where member_no = ${memberNo} order by qna_time desc)TMP) -->
<!-- 		where rn between ${begin} and ${end} -->

<!--  	</select> -->
 	
 </mapper>